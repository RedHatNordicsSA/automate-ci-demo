apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-and-push-image
spec:
  params:
    - default: 'https://github.com/jwennerberg/open-tour-automation-ci.git'
      description: Source to the GIT
      name: git-url
      type: string
    - default: main
      description: revision to be used
      name: git-revision
      type: string
    - default: the-source
      description: Where to checkout the source relative to the workspace
      name: context-dir
      type: string
    - default: quay.io/jwennerberg/person-service
      description: the name of the target image including registry
      name: image-name
      type: string
    - description: the username you use to access the registry
      name: image-username
      type: string
    - description: The password you use to access the registry
      name: image-password
      type: string
    - description: The name of the namespace to apply the result to
      name: target-namespace
      type: string
  tasks:
    - name: git-clone
      params:
        - name: url
          value: $(params.git-url)
        - name: deleteExisting
          value: 'true'
        - name: verbose
          value: 'true'
        - name: revision
          value: $(params.git-revision)
        - name: subdirectory
          value: $(params.context-dir)
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
    - name: package
      params:
        - name: GOALS
          value:
            - package
            - '-DskipTests'
            - '-Dquarkus.container-image.push=false'
            - '-Dquarkus.container-image.build=false'
        - name: CONTEXT_DIR
          value: $(params.context-dir)/person-service
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: maven-caching
      workspaces:
        - name: source
          workspace: shared-workspace
        - name: maven-settings
          workspace: maven-settings
    - name: code-analysis
      runAfter:
        - git-clone
      taskSpec:
        metadata: {}
        spec: null
        steps:
          - image: 'registry.access.redhat.com/ubi8/ubi-micro:8.5'
            name: code-analysis
            resources: {}
            script: |
              echo "# Static analysis"
              exit 0
            workingDir: $(workspaces.source.path)
        workspaces:
          - name: source
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: generate-report
      runAfter:
        - git-clone
      taskSpec:
        metadata: {}
        spec: null
        steps:
          - image: 'registry.access.redhat.com/ubi8/ubi-micro:8.5'
            name: code-analysis
            resources: {}
            script: |
              echo "# Generate dependency report"
              exit 0
            workingDir: $(workspaces.source.path)
        workspaces:
          - name: source
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: build-and-push-image
      params:
        - name: GOALS
          value:
            - package
            - '-DskipTests'
            - '-Dquarkus.container-image.push=true'
            - '-Dquarkus.container-image.build=true'
            - '-Dquarkus.container-image.builder=jib'
            - '-Dquarkus.container-image.image=$(params.image-name)'
            - '-Dquarkus.container-image.username=$(params.image-username)'
            - '-Dquarkus.container-image.password=$(params.image-password)'
        - name: CONTEXT_DIR
          value: $(params.context-dir)/person-service
      runAfter:
        - package
        - code-analysis
        - generate-report
      taskRef:
        kind: Task
        name: maven-caching
      workspaces:
        - name: source
          workspace: shared-workspace
        - name: maven-settings
          workspace: maven-settings
    - name: image-check
      runAfter:
        - build-and-push-image
      taskRef:
        kind: ClusterTask
        name: openshift-client
    - name: image-scan
      runAfter:
        - build-and-push-image
      taskRef:
        kind: ClusterTask
        name: openshift-client
    - name: deploy-check
      runAfter:
        - build-and-push-image
      taskRef:
        kind: ClusterTask
        name: openshift-client
    - name: deploy
      params:
        - name: kustomize-dir
          value: $(params.context-dir)/manifests/overlays/dev
        - name: target-namespace
          value: $(params.target-namespace)
        - name: image-name
          value: $(params.image-name)
        - name: image-digest-path
          value: $(params.context-dir)/person-service/target
      runAfter:
        - image-check
        - image-scan
        - deploy-check
      taskRef:
        kind: Task
        name: kustomize
      workspaces:
        - name: source
          workspace: shared-workspace
    - name: performance-test
      runAfter:
        - deploy
      taskRef:
        kind: ClusterTask
        name: openshift-client
  workspaces:
    - name: shared-workspace
    - name: maven-settings
